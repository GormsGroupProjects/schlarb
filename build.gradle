plugins {
    id 'java'
    id 'jacoco'
}

group 'org.example'
version '1.0-SNAPSHOT'
apply plugin: 'java'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    //came from new project
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation "org.mockito:mockito-core:3.+"
    //imported from gorms projectOne
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.18'
    compile 'io.javalin:javalin:3.13.6'
    compile "org.slf4j:slf4j-simple:1.8.0-beta4"
    compile "com.fasterxml.jackson.core:jackson-databind:2.10.3"
    implementation 'org.json:json:20171018'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled false
        csv.enabled false
        html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
    }
}

jacoco {
    toolVersion = '0.8.5'
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
    // https://docs.gradle.org/current/userguide/jacoco_plugin.html
    // Gradle default for reports Directory is $buildDir/reports/jacoco
}

test {
    jacoco {
        destinationFile = layout.buildDirectory.file('jacoco/jacocoTest.exec').get().asFile
        classDumpDir = layout.buildDirectory.dir('jacoco/classpathdumps').get().asFile
    }
}

jar {
    manifest {
        attributes(
                'Main-Class':'org.schlarb.Server'
        )
    }
}

//might need a build task to make this build dependencies before trying to mak jar file!
task runjar(type: JavaExec){
    main = 'org.schlarb.Server'
    classpath = sourceSets.main.runtimeClasspath
}

task runSchlarbServer(dependsOn:[ 'hello', 'test', 'runjar']){
//    lets try this...
}

task hello{
    doLast {
        println 'hello jenkins'
    }
}